"use strict";(self.webpackChunktemplate_pixijs=self.webpackChunktemplate_pixijs||[]).push([[656],{8656:(e,t,i)=>{i.r(t),i.d(t,{Sprite_Ammo:()=>m,Scene_LowCostRoughLike:()=>y,default:()=>c});var s=i(569),h=i.n(s),r=i(8519),a=i(1971);class n{static playerMoveSpeed(e){return Math.min(16,(e.currentTime-e.startTime)/6e4+4)}static shootCoolDown(e){return Math.max(1,10-(e.currentTime-e.startTime)/3e4)}static enemyAttackPower(e){return(e.currentTime-e.startTime)/6e4}static enemyMoveSpeed(e){return Math.min(8,(e.currentTime-e.startTime)/6e4+1)}static spawnCoolDown(e){return Math.max(10,20-(e.currentTime-e.startTime)/6e4)}static spawnCount(e){return Math.floor(Math.random()*((e.currentTime-e.startTime)/6e4)+1+(e.currentTime-e.startTime)/18e4)}static rank(e){const t=(e.currentTime-e.startTime)/1e3;return t>240?"S":t>210?"AAA":t>180?"AA":t>150?"A":t>120?"B":t>90?"C":t>60?"D":t>30?"E":"F"}}const o=new a.pn8({align:"center",fontFamily:"Arial",fontSize:24,fill:["#777777"],stroke:"#777777",strokeThickness:1,dropShadowAngle:180}),l=new a.pn8({align:"center",fontFamily:"Arial",fontSize:36,fill:["#FFFFFF"],stroke:"#777777",strokeThickness:1,dropShadowAngle:180});class m extends a.TCu{constructor(e,t){super(),this.vecX=e,this.vecY=t,this.beginFill(52428),this.drawRect(0,0,8,8),this.endFill()}}class y extends a.W20{constructor(){super(),this.mouseX=0,this.mouseY=0,this.bg=new a.TCu,this.bg.beginFill(0),this.bg.drawRect(0,0,r.Z.screen.width,r.Z.screen.height),this.bg.endFill(),this.bg.interactive=!0,this.player=new a.TCu,this.player.beginFill(268435455),this.player.drawRect(0,0,25,25),this.player.endFill(),this.enemies=new a.W20,this.playerAmmos=new a.W20,this.text_playTime=new a.xvT("",o),this.text_playTime.anchor.set(.5),this.text_health=new a.xvT("",o),this.text_health.anchor.set(.5),this.text_gameover=new a.xvT("Click to Start",l),this.text_gameover.interactive=!0,this.text_gameover.cursor="pointer",this.text_gameover.anchor.set(.5),this.addChild(this.bg,this.player,this.playerAmmos,this.enemies,this.text_playTime,this.text_health,this.text_gameover),this.on("pointermove",this.onPointerMove.bind(this)),this.on("pointertap",this.onPointerTap.bind(this))}startGame(){this.startTime=(new Date).getTime(),this.Life=1e3,this.player.visible=!0,this.spawnCoolDown=0,this.shootCoolDown=0,this.player.x=(r.Z.screen.width-this.player.width)/2,this.player.y=(r.Z.screen.height-this.player.height)/2,this.enemies.removeChildren()}update(e){if(this.text_playTime.x=r.Z.screen.width/2,this.text_playTime.y=r.Z.screen.height/2,this.text_health.x=this.text_playTime.x,this.text_health.y=this.text_playTime.y+this.text_playTime.height+8,this.text_gameover.x=r.Z.screen.width/2,this.text_gameover.y=(r.Z.screen.height-this.text_gameover.height)/2,!(this.life<=0)&&(this.currentTime=(new Date).getTime(),this.text_playTime.text=`${Math.floor((this.currentTime-this.startTime)/1e3)}s`,this.playerThonk(e),this.shootCoolDown-=e,this.shootCoolDown<0&&(this.spawnPlayerAmmo(),this.shootCoolDown+=n.shootCoolDown(this)),this.enemies.children.forEach((t=>{this.enemyThonk(t,e)})),this.playerAmmos.children.forEach((t=>{this.ammoThonk(t,e)})),this.spawnCoolDown-=e,this.spawnCoolDown<0)){const e=n.spawnCount(this);for(let t=0;t<e;t++)this.spawnEnemy();this.spawnCoolDown+=n.spawnCoolDown(this)}}collideCheck(e,t){const i=e.getBounds(),s=t.getBounds();return i.x+i.width>s.x&&i.x<s.x+s.width&&i.y+i.height>s.y&&i.y<s.y+s.height}spawnEnemy(){const e=new a.TCu;switch(e.beginFill(13369344),e.drawRect(0,0,10,10),e.endFill(),Math.floor(4*Math.random())){case 0:e.x=r.Z.screen.width*Math.random(),e.y=0;break;case 1:e.x=r.Z.screen.width,e.y=r.Z.screen.height*Math.random();break;case 2:e.x=r.Z.screen.width*Math.random(),e.y=r.Z.screen.height;break;default:e.x=0,e.y=r.Z.screen.height*Math.random()}this.enemies.addChild(e)}spawnPlayerAmmo(){const e=this.player.x+this.player.width/2-this.mouseX,t=this.player.y+this.player.height/2-this.mouseY,i=Math.atan2(t,e)-Math.PI/2,s=(this.currentTime-this.startTime)/1e5+4,h=Math.sin(i)*s,r=-Math.cos(i)*s,a=new m(h,r);a.x=this.player.x+this.player.width/2,a.y=this.player.y+this.player.height/2,this.playerAmmos.addChild(a)}playerThonk(e){const t=n.playerMoveSpeed(this);(h().isKeyDown("KeyA")||h().isKeyDown("ArrowLeft"))&&(this.player.x=Math.max(this.player.width,this.player.x-t*e)),(h().isKeyDown("KeyD")||h().isKeyDown("ArrowRight"))&&(this.player.x=Math.min(r.Z.screen.width-this.player.height,this.player.x+t*e)),(h().isKeyDown("KeyW")||h().isKeyDown("ArrowUp"))&&(this.player.y=Math.max(this.player.height,this.player.y-t*e)),(h().isKeyDown("KeyS")||h().isKeyDown("ArrowDown"))&&(this.player.y=Math.min(r.Z.screen.height-this.player.height,this.player.y+t*e))}enemyThonk(e,t){const i=n.enemyMoveSpeed(this);e.x+=i*(this.player.x+this.player.width/2>e.x?1:-1)*t,e.y+=i*(this.player.y+this.player.height/2>e.y?1:-1)*t,this.collideCheck(this.player,e)&&(this.Life-=t*n.enemyAttackPower(this))}ammoThonk(e,t){e.x+=e.vecX*t,e.y+=e.vecY*t,this.enemies.children.forEach((t=>{this.collideCheck(e,t)&&(t.removeFromParent(),e.removeFromParent())})),(e.x<0||e.x>r.Z.screen.width||e.y<0||e.y>r.Z.screen.height)&&e.removeFromParent()}get Life(){return this.life}set Life(e){if(this.life=Math.max(0,e),this.text_health.text=`${Math.ceil(this.life)} HP`,this.life<=0)return this.player.visible=!1,this.text_gameover.visible=!0,void(this.text_gameover.text=`GAME OVER\n\nRank: ${n.rank(this)}\n${this.text_playTime.text}\n\nClick to retry`)}onPointerMove(e){console.log(e),this.mouseX=e.globalX,this.mouseY=e.globalY}onPointerTap(e){console.log(e),this.text_gameover.visible&&(this.startGame(),this.text_gameover.visible=!1)}}const c=y}}]);